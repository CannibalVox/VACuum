//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using uLink;
using System.Threading;
using LitJson;
using LeatherLoader;
using System.Text;
using System.Collections;
using System.Reflection;


namespace VACuum
{
	[Bootstrap]
	public class VACuumBootstrap : MonoBehaviour
	{
		internal static Queue Results = new Queue();
		public DateTime mNextUpdateCheck = DateTime.MaxValue;
		
		public void Awake()
		{
			DontDestroyOnLoad(this.gameObject);
			mNextUpdateCheck = DateTime.Now;
		}

		public void uLink_OnPlayerConnected(uLink.NetworkPlayer player)
		{
			NetUser user = (NetUser)player.localData;
			VACResults result = new VACResults() { DisplayName = user.displayName, SteamId = user.userID };
			ThreadPool.QueueUserWorkItem((o) =>
			                             {
				//Query result
				string url = string.Format("http://www.vacbans.com/api/?call=profile&comm_id={0}", result.SteamId);
				string response = new System.Net.WebClient().DownloadString(url);
				
				//Parse to json
				JsonData data = JsonMapper.ToObject(response);
				result.IsBanned = (data["vac_ban"].AsInt != 0);
				
				//Place results back to the thread
				lock (Results.SyncRoot)
				{
					Results.Enqueue(result);
				}
			});
		}
		
		public void Update()
		{
			if (DateTime.Now < mNextUpdateCheck)
				return;
			
			lock (Results.SyncRoot)
			{
				while (Results.Count > 0)
				{
					VACResults result = (VACResults)Results.Dequeue();
					
					StringBuilder builder = new StringBuilder();
					builder.AppendLine(string.Format("VACBans.com tested player {0} with steam ID {1}", result.DisplayName, result.SteamId));
					if (result.IsBanned)
					{
						builder.AppendLine("VACBans.com says player is banned!  Banning...");
						BanList.Add(result.SteamId);
						BanList.Save();
						NetUser user = NetUser.FindByUserID(result.SteamId);
						
						if (user != null)
							user.Kick(NetError.Facepunch_Kick_Ban, true);
					} else
						builder.AppendLine("VACBans.com says player is A-OK.");
					ConsoleSystem.Log(builder.ToString());
				}
			}
			
			mNextUpdateCheck = DateTime.Now.AddSeconds(5);
		}
	}
}

